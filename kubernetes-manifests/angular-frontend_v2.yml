apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-frontend-v2
  labels:
    team: alpha
    dt.owner: alpha
  annotations:
    team: alpha
spec:
  selector:
    matchLabels:
      app: angular-frontend-v2
  template:
    metadata:
      labels:
        app: angular-frontend-v2
        app.kubernetes.io/name: angular-frontend-v2
        app.kubernetes.io/part-of: easytravel
        team: alpha
        dt.owner: alpha
        app.kubernetes.io/version: v2
      annotations:
        team: alpha
        dt.owner: alpha
    spec:
      containers:
        - env:
            - name: ET_BACKEND_URL
              value: http://backend-service:8080
            - name: DT_RELEASE_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
            - name: DT_RELEASE_PRODUCT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/part-of']
            - name: DT_RELEASE_BUILD_VERSION
              value: 2.0.1
            - name: DT_RELEASE_STAGE
              value: v2
            - name: MY_PG_NAME
              value: easytravel-frontend-v2
          image: dynatrace/easytravel-angular-frontend
          imagePullPolicy: Always
          name: angular-frontend-v2
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "500Mi"
            limits:
              memory: "500Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: angular-frontend-service-v2
  labels:
    team: alpha
    dt.owner: alpha
    app.kubernetes.io/version: 1.0.2
    app.kubernetes.io/name: angular-frontend-v2
    app.kubernetes.io/part-of: easytravel
spec:
  ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: angular-frontend-v2
  type: ClusterIP
